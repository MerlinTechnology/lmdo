# @mandatory: true
# @description: microservice name
Service: superman

# @mandatory: true
# @description: microservice creator
User: default

# @mandatory: true
# @description: AWS credential profile name, default to 'default'
Profile: default

# @mandatory: true
# @description: API stage
Stage: dev

# @mandatory: false
# @description: cloudformation files to upload to. If not set
# will load from local but won't work for nested stack templates.
CloudformationBucket: cloudformation.bucket.name

# @mandatory: false
# @description: static asset to deploy to given bucket
AssetS3Bucket: static.bucket.name
AseetDirectory: build

# @mandatory: false
# @description: lambda functions to deploy
Lambda:
    - EnvironmentVariables:              # optional
          MYSQL_HOST: localhost
          MYSQL_PASSWORD: secret
          MYSQL_USERNAME: admin
          MYSQL_DATABASE: lmdo
      S3Bucket: lambda.bucket.name        # mandatory
      FunctionName: superman              # mandatory
      Handler: handler.fly                # mandatory 
      MemorySize: 128                     # optional
      Role: roleName                      #Either provide a role name or policy doc 
      RolePolicyDocument: path/to/policy  #Policy takes preccedent
      Runtime: python2.7                  # optional default to 'python2.7'
      Timeout:                            # optional default to 180
      VpcConfig:                          # optional
          SecurityGroupIds:
          SubnetIds:
    # Second lambda function 
    - S3Bucket: lambda.bucket.name        # mandatory
      FunctionName: superman              # mandatory
      Handler: handler.fly                # mandatory 
      Role: roleName                      #Either provide a role name or policy doc 
      RolePolicyDocument: path/to/policy  #Policy takes preccedent
 
